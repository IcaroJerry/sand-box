package ifba.ads.ssol.shell.windows;

import ifba.ads.ssol.processmenager.escalonador.Escalonador;
import ifba.ads.ssol.processmenager.facede.Facede;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import ifba.ads.ssol.shell.Core;
import java.util.ArrayList;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;

public class TelaProcesso extends javax.swing.JFrame implements Runnable {

    public class ThreadWindowCheck extends Thread {

        @Override
        public void run() {
            chkGerenciaMemoria.setState(Core.getWindowGerenciaDeMemoria().isVisible());
            chkGerenciaDisco.setState(Core.getWindowGerenciaDeDisco().isVisible());
        }
    }

    public void notifyWindowCheck() {
        new ThreadWindowCheck().start();
    }

    public class ThreadDrawTable extends Thread {

        DefaultTableModel tempModel;

        @Override
        public void run() {
            while (true) {
                try {
                    Thread.sleep(500);
                } catch (InterruptedException ex) {
                    Logger.getLogger(TelaProcesso.class.getName()).log(Level.SEVERE, null, ex);
                }

                tempModel = (DefaultTableModel) tableProcess.getModel();
                this.addLinhas();
                tempModel = null;

            }
        }

        private void addLinhas() {
            Escalonador escalonador = Facede.getInstance().getEscalonador();

            tempModel = cleanRows(tempModel);
            ArrayList lista = new ArrayList();
            int tamanho = escalonador.getFilaPronto().size();

            for (int i = 0; i < tamanho; i++) {

                lista.add(escalonador.getFilaPronto().get(i).getPcb().getPid());
                lista.add(escalonador.getFilaPronto().get(i).getPcb().getNomeProcesso());
                lista.add(escalonador.getFilaPronto().get(i).getPcb().getQuantidadeInstrucoes());
                lista.add(escalonador.getFilaPronto().get(i).getPcb().getEstadoProcesso());
                tempModel.addRow(lista.toArray());
                lista.clear();
            }
            tableProcess.setModel(tempModel);
        }

        private DefaultTableModel cleanRows(DefaultTableModel tempModel) {
            int size = tempModel.getRowCount();
            for (int i = 0; i < size; i++) {
                tempModel.removeRow(0);
            }

            return tempModel;
        }

    }

    @Override
    public void run() {
        while (true) {
        }
    }

    /**
     * Creates new form TelaProcesso
     */
    public TelaProcesso() {
        initComponents();
        new ThreadDrawTable().start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jPanel4 = new javax.swing.JPanel();
        btnCriarProcesso = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        scrollTableProcess = new javax.swing.JScrollPane();
        tableProcess = new javax.swing.JTable();
        btnFinilizar = new javax.swing.JButton();
        btnPCB = new javax.swing.JButton();
        btnEEV = new javax.swing.JButton();
        btnSuspender = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        menuPrincipal = new javax.swing.JMenuBar();
        menuExibir = new javax.swing.JMenu();
        chkGerenciaMemoria = new javax.swing.JCheckBoxMenuItem();
        chkGerenciaDisco = new javax.swing.JCheckBoxMenuItem();
        menuOpcoes = new javax.swing.JMenu();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gerência de Processos");

        btnCriarProcesso.setText("Criar Processo");
        btnCriarProcesso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCriarProcessoActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("PROCESSOS");

        tableProcess.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PID", "Nome", "Nº. Instruções", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableProcess.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        tableProcess.getTableHeader().setReorderingAllowed(false);
        scrollTableProcess.setViewportView(tableProcess);
        if (tableProcess.getColumnModel().getColumnCount() > 0) {
            tableProcess.getColumnModel().getColumn(0).setResizable(false);
            tableProcess.getColumnModel().getColumn(1).setResizable(false);
            tableProcess.getColumnModel().getColumn(2).setResizable(false);
            tableProcess.getColumnModel().getColumn(3).setResizable(false);
        }

        jScrollPane1.setViewportView(scrollTableProcess);

        btnFinilizar.setText("Finalizar");
        btnFinilizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinilizarActionPerformed(evt);
            }
        });

        btnPCB.setText("PCB");
        btnPCB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPCB.setEnabled(false);
        btnPCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPCBActionPerformed(evt);
            }
        });

        btnEEV.setText("EEV");
        btnEEV.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEEV.setEnabled(false);
        btnEEV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEEVActionPerformed(evt);
            }
        });

        btnSuspender.setText("Suspender");
        btnSuspender.setEnabled(false);
        btnSuspender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuspenderActionPerformed(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("SOFTWARE EM CONSTRUÇÃO");

        menuExibir.setText("Exibir");

        chkGerenciaMemoria.setSelected(true);
        chkGerenciaMemoria.setText("Gerência De Memória");
        chkGerenciaMemoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkGerenciaMemoriaActionPerformed(evt);
            }
        });
        menuExibir.add(chkGerenciaMemoria);

        chkGerenciaDisco.setSelected(true);
        chkGerenciaDisco.setText("Gerência De Disco");
        chkGerenciaDisco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkGerenciaDiscoActionPerformed(evt);
            }
        });
        menuExibir.add(chkGerenciaDisco);

        menuPrincipal.add(menuExibir);

        menuOpcoes.setText("Opções");
        menuPrincipal.add(menuOpcoes);

        setJMenuBar(menuPrincipal);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(178, 178, 178)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(49, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnCriarProcesso, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnFinilizar, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnPCB, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnEEV, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(45, 45, 45))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSuspender, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2)
                                .addGap(17, 17, 17))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1)
                .addGap(16, 16, 16)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFinilizar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPCB, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEEV, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCriarProcesso, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSuspender, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCriarProcessoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCriarProcessoActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(this);
        File arquivo = chooser.getSelectedFile();
        if (arquivo != null) {
            try {
                Facede.getInstance().criarProcesso(arquivo);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnCriarProcessoActionPerformed

    private void btnSuspenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuspenderActionPerformed

    }//GEN-LAST:event_btnSuspenderActionPerformed

    private void btnFinilizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinilizarActionPerformed
        try {
            if (Facede.getInstance().verificarRemocaoProcesso() == false) {
                new TelaFilinalizarProcesso(this, true);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_btnFinilizarActionPerformed

    private void btnPCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPCBActionPerformed
        if (Core.getWindowTelaPCB().isVisible()) {
            Core.getWindowTelaPCB().setVisible(false);
        } else {
            Core.getWindowTelaPCB().setVisible(true);
        }
    }//GEN-LAST:event_btnPCBActionPerformed

    private void btnEEVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEEVActionPerformed
        if (Core.getWindowEEV().isVisible()) {
            Core.getWindowEEV().setVisible(false);
        } else {
            Core.getWindowEEV().setVisible(true);
        }
        TelaEEV telaEEV = new TelaEEV();
    }//GEN-LAST:event_btnEEVActionPerformed

    private void chkGerenciaMemoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkGerenciaMemoriaActionPerformed
        Core.getWindowGerenciaDeMemoria().setVisible(this.chkGerenciaMemoria.getState());
    }//GEN-LAST:event_chkGerenciaMemoriaActionPerformed

    private void chkGerenciaDiscoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkGerenciaDiscoActionPerformed
        Core.getWindowGerenciaDeDisco().setVisible(this.chkGerenciaDisco.getState());
    }//GEN-LAST:event_chkGerenciaDiscoActionPerformed

    @Override
    public void pack() {
        Core.getWindowGerenciaDeMemoria().setVisible(this.chkGerenciaMemoria.getState());
        Core.getWindowGerenciaDeDisco().setVisible(this.chkGerenciaDisco.getState());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCriarProcesso;
    private javax.swing.JButton btnEEV;
    private javax.swing.JButton btnFinilizar;
    private javax.swing.JButton btnPCB;
    private javax.swing.JButton btnSuspender;
    private javax.swing.JCheckBoxMenuItem chkGerenciaDisco;
    private javax.swing.JCheckBoxMenuItem chkGerenciaMemoria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenu menuExibir;
    private javax.swing.JMenu menuOpcoes;
    private javax.swing.JMenuBar menuPrincipal;
    private javax.swing.JScrollPane scrollTableProcess;
    private javax.swing.JTable tableProcess;
    // End of variables declaration//GEN-END:variables
}
